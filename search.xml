<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Self Introduction</title>
      <link href="/2022/01/15/self-introduction/"/>
      <url>/2022/01/15/self-introduction/</url>
      
        <content type="html"><![CDATA[<h4 id="Self-Introduction"><a href="#Self-Introduction" class="headerlink" title="Self Introduction"></a>Self Introduction</h4><p>My name is Jason Zeng, a junior machine learning engineer worked in Kuaishou Corporation last year. For the first half of the year, I was working as an intern in search scene of HashTag. My major target is to improve the ranking result by comparing query-photo relevance. While in the second half of the year, I became a full time employer in search scene of Electric Commerce. My major work is focus on the recall and coarse-grained ranking stage.</p><p>Prior to working, I gained my bachelor degree in University of Chinese Academy of Science in Beijing, and then I pursue my Ph.D. study in University of California, San Diego. In 2020, I quit my Ph.D. programme and went back to China with master degree.</p><p>That’s all for my introduction, thank you.</p><h4 id="Program-1"><a href="#Program-1" class="headerlink" title="Program 1"></a>Program 1</h4><p>The background is that under the goods search scene, we found near 2% of the query has the intent in goods of some specific shop, which we call it shop intent. While our apps didn’t show the customer enough goods in those shops, instead they show other goods with high order cnt. To improve the user satisfaction, I decided to enhance the display result of those queries.</p><p>To solve the problems, we need to find where exactly cause the case, so I looked through almost all the code according to the goods search scene, and talking with the related people with the problem. I finally founds the problems comes from three stages, which are the intent recognition, the merge of recaller, and the sorting rule of ranking stage.</p><p>So，I resolved the problems one by one, and eventually gain an satisfied result, not only in user satisfactory but also in order cnt and gmv.</p><h4 id="Program-2"><a href="#Program-2" class="headerlink" title="Program 2"></a>Program 2</h4><p>Under the goods search scene, we found that the model we used online has poor performance because the model is for recommendation instead of search. To enhance the click-through rate, I decided to use the data in goods search scene to train a model, which could help predict the click-through rate. I divided the program into 3 pieces:</p><ul><li><p>generate the train-validation sample set</p></li><li><p>train using the Youtube DNN model</p></li><li><p>use the predict CTR to help sorting online with AB test</p></li></ul><p>After the implementation of the task, the author satisfaction improve and click-through rate increase greatly.</p><h4 id="Program-3"><a href="#Program-3" class="headerlink" title="Program 3"></a>Program 3</h4><p>Under the hashtag video scene, previously the online only focus on to fit the user behavior,  instead of the relevance between query and video. To resolve the problem, we decide to train a lambdaMART model which focus on the relevance between query and video.</p><p>I divide the task into three steps</p><ul><li><p>generate the train-validation sample set</p></li><li><p>auto train the LambdaMART set and upload the model to the cache</p></li><li><p>add some strategy to avoid the decline of the ctr and so on.</p></li></ul><p>finally, we get improvement not only on user satisfactory, but also the click and play duration of the user.</p><h5 id="问题收集"><a href="#问题收集" class="headerlink" title="问题收集"></a>问题收集</h5><ul><li><p>为什么离职？</p></li><li><p>目前薪资</p></li><li><p>期望薪资</p></li><li><p>项目经历</p></li><li><p>手上有无offer，待遇如何</p></li><li><p>反问</p><ul><li><p>我听说深圳，新加坡也有相关content intelligence 团队，能讲一下它们之间的分工和联系么？会需要出差么？</p></li><li><p>薪资架构</p></li><li><p>试用期时间</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Resume </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Resume </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建 Hexo 博客</title>
      <link href="/2022/01/14/%E6%90%AD%E5%BB%BAHexo-blog/"/>
      <url>/2022/01/14/%E6%90%AD%E5%BB%BAHexo-blog/</url>
      
        <content type="html"><![CDATA[<h4 id="Mac-安装-Node-js"><a href="#Mac-安装-Node-js" class="headerlink" title="Mac 安装 Node.js"></a>Mac 安装 Node.js</h4><ul><li>最常用的方法是通过 Homebrew 进行 Node.js 和 npm 的安装。常用指令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 更新与安装 node</span></span><br><span class="line">brew update</span><br><span class="line">brew install node</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查安装版本</span></span><br><span class="line">brew list</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除 node</span></span><br><span class="line">brew uninstall node</span><br></pre></td></tr></table></figure><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><ul><li>使用 npm 命令安装 Hexo</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者安装 懒人包</span></span><br><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><h4 id="初始化-Hexo"><a href="#初始化-Hexo" class="headerlink" title="初始化 Hexo"></a>初始化 Hexo</h4><ol><li><p>初始化一个 directory: <code>mkdir ~/hexo/dir &amp;&amp; cd ~/hexo/dir</code></p></li><li><p>初始化博客：<code>hexo init</code></p></li><li><p>静态编译博客 : <code>hexo g</code> \ <code>hexo generate</code></p></li><li><p>离线检查博客效果：<code>hexo s</code>\ <code>hexo server</code> 可以通过访问  <code>http://localhost:4000/</code> 本地检查效果</p></li><li><p>修改 config 文件，路径在 <code>~/hexo/dir/_config.yml</code>，需要修改</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">deploy:</span></span><br><span class="line"> <span class="attr">type :</span> <span class="string">git</span></span><br><span class="line"> <span class="attr">repository:</span> <span class="string">git@github.com:username/username.github.io.git</span></span><br><span class="line"> <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><p>推到线上 <code>hexo d</code> \ <code>hexo deploy (-m message)</code></p></li></ol><h4 id="写博客并推到线上"><a href="#写博客并推到线上" class="headerlink" title="写博客并推到线上"></a>写博客并推到线上</h4><ol><li><p>新建博客：<code>hexo n &quot;your title&quot;</code>\ <code>hexo new &quot;your title&quot;</code></p></li><li><p>进入相应路径修改 md 文件(写博客)： <code>cd ~/hexo/dir/source/_posts/your title.md</code></p></li><li><p>静态编译博客 : <code>hexo g</code> \ <code>hexo generate</code></p></li><li><p>离线检查博客效果：<code>hexo s</code>\ <code>hexo server</code> 可以通过访问 <code>http://localhost:4000/</code> 本地检查效果</p></li><li><p>推到线上 <code>hexo d</code> \ <code>hexo deploy (-m message)</code></p></li></ol><h4 id="个性化-Hexo-博客"><a href="#个性化-Hexo-博客" class="headerlink" title="个性化 Hexo 博客"></a>个性化 Hexo 博客</h4><ul><li>参考：<a href="https://butterfly.js.org/posts/dc584b87/">Butterfly 安裝文檔</a></li></ul><h5 id="如何对每一篇-post-做相应的修改？"><a href="#如何对每一篇-post-做相应的修改？" class="headerlink" title="如何对每一篇 post 做相应的修改？"></a>如何对每一篇 post 做相应的修改？</h5><p>可参考 <a href="https://blog.csdn.net/qq_43857095/article/details/108306164"># Hexo butterfly 自定义文章封面 &amp;&amp; 主页顶部图片更改</a></p><p>比较重要的几个参数：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">Blog</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">Hexo</span>, <span class="string">Nodejs</span>, <span class="string">git</span>] <span class="comment"># 或者用 - 隔行分隔</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">对这篇</span> <span class="string">blog</span> <span class="string">的描述</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="string">/img/avocado.jpeg</span> <span class="comment"># 头部图片</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">true</span> <span class="comment"># 是否现实评论</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">/img/hashtag.jpeg</span> <span class="comment"># 封面图片</span></span><br></pre></td></tr></table></figure><p>如果没有 pug 以及 stylus 的渲染器，请下载安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
